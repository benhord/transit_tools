:mod:`transit_tools.lcprocess`
==============================

.. py:module:: transit_tools.lcprocess


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   transit_tools.lcprocess.process_lc
   transit_tools.lcprocess.mask



.. function:: process_lc(lc, flatten_length=None, binsize=1, remove_outliers=None, remove_nans=True, mask_noise=False, mask_plinds=None, **kwargs)

   Function to process a light curve and return it after processing. The order
   in which processing occurs is removing NaNs, removing noise based on sector,
   binning, removing outliers manually, and finally flattening, which includes
   not only flattening using the scipy.signal.savgol_filter function, but also
   iterative outlier clipping. See 'lightkurve' documentation for further
   information on the capabilities of these functions.

   !!Update so processing occurs in order of keywords listed!!
   !!Update to let user specify which planets from lc.known_pls will be
        included in mask for flattening (maybe by passing arr of indices?)!!

   :param lc: The light curve to be processed.
   :type lc: LightCurve object
   :param flatten_length: The window length to be passed to scipy.signal.savgol_filter for the
                          flattening. If None, no flattening will be performed.
   :type flatten_length: odd int or None
   :param binsize: The number of points per bin that will be combined.
   :type binsize: int
   :param remove_outliers: If set to a number, it represents the number of sigma above which to
                           remove outliers from. If set to None, no outliers will be removed
                           separately from those already removed by the flattening.
   :type remove_outliers: int or float or None
   :param remove_nans: Flag to determine if NaNs will be removed from the light curve.
   :type remove_nans: bool
   :param mask_noise: Flag to determine whether parts of the light curve will be removed
                      based on how noisy those parts of each sector are on average and
                      depending on the type of light curve.
   :type mask_noise: bool
   :param mask_plinds: Series of indices in known_pls property of the light curve that will be
                       masked out before flattening. If None, all planets in known_pls will be
                       masked out before flattening.
   :type mask_plinds: list or array
   :param kwargs: Additional arguments to be passed to the 'flatten' method of the
                  LightCurve object.

   :returns: **lc** -- Processed light curve. Also now has the attribute lc.trend if flattening
             was performed. This attribute contains the trend of the light curve
             prior to flattening.
   :rtype: LightCurve object


.. function:: mask(lc, upper=None, lower=None, out_mask=True)

   Function to mask out sections of the user-provided light curve.

   !!Add interpolation option to fill in gaps with noise!!
   !!Add option to input a mask that can then be altered with further
     removals from light curve!!

   :param lc: The light curve to be masked.
   :type lc: 'LightCurve' object
   :param upper: Upper limit timestamp of the masked region. If lower is None, all
                 timestamps before this value will be masked out. This value is not
                 inclusive and will remain in the light curve.
   :type upper: float
   :param lower: Lower limit timestamp of the masked region. If upper is None, all
                 timestamps after this value will be masked out. This value is not
                 inclusive and will remain in the light curve.
   :type lower: float
   :param out_mask: Flag to determine whether the mask generated will be output. If True, an
                    additional output will be expected.
   :type out_mask: bool

   :returns: * **masked_lc** (*'LightCurve' object*) -- The light curve with the specified portions masked out.
             * **mask** (*array, optional*) -- A boolean array of identical length to the time array from the input
               light curve with masked portions set to False and everything else set to
               True.


